#include "Enum/KeyCode.h"
namespace Hoshino
{
	KeyCode GlfwKeyToKeyCode(int glfwKeyCode)
	{
		static const ::std::unordered_map<int, KeyCode> keyMap = {
		    {GLFW_KEY_UNKNOWN, KeyCode::NONE},
		    {GLFW_KEY_SPACE, KeyCode::Space},
		    {GLFW_KEY_APOSTROPHE, KeyCode::Apostrophe},
		    {GLFW_KEY_COMMA, KeyCode::Comma},
		    {GLFW_KEY_MINUS, KeyCode::Minus},
		    {GLFW_KEY_PERIOD, KeyCode::Period},
		    {GLFW_KEY_SLASH, KeyCode::Slash},
		    {GLFW_KEY_0, KeyCode::Key0},
		    {GLFW_KEY_1, KeyCode::Key1},
		    {GLFW_KEY_2, KeyCode::Key2},
		    {GLFW_KEY_3, KeyCode::Key3},
		    {GLFW_KEY_4, KeyCode::Key4},
		    {GLFW_KEY_5, KeyCode::Key5},
		    {GLFW_KEY_6, KeyCode::Key6},
		    {GLFW_KEY_7, KeyCode::Key7},
		    {GLFW_KEY_8, KeyCode::Key8},
		    {GLFW_KEY_9, KeyCode::Key9},
		    {GLFW_KEY_SEMICOLON, KeyCode::Semicolon},
		    {GLFW_KEY_EQUAL, KeyCode::Equal},
		    {GLFW_KEY_A, KeyCode::A},
		    {GLFW_KEY_B, KeyCode::B},
		    {GLFW_KEY_C, KeyCode::C},
		    {GLFW_KEY_D, KeyCode::D},
		    {GLFW_KEY_E, KeyCode::E},
		    {GLFW_KEY_F, KeyCode::F},
		    {GLFW_KEY_G, KeyCode::G},
		    {GLFW_KEY_H, KeyCode::H},
		    {GLFW_KEY_I, KeyCode::I},
		    {GLFW_KEY_J, KeyCode::J},
		    {GLFW_KEY_K, KeyCode::K},
		    {GLFW_KEY_L, KeyCode::L},
		    {GLFW_KEY_M, KeyCode::M},
		    {GLFW_KEY_N, KeyCode::N},
		    {GLFW_KEY_O, KeyCode::O},
		    {GLFW_KEY_P, KeyCode::P},
		    {GLFW_KEY_Q, KeyCode::Q},
		    {GLFW_KEY_R, KeyCode::R},
		    {GLFW_KEY_S, KeyCode::S},
		    {GLFW_KEY_T, KeyCode::T},
		    {GLFW_KEY_U, KeyCode::U},
		    {GLFW_KEY_V, KeyCode::V},
		    {GLFW_KEY_W, KeyCode::W},
		    {GLFW_KEY_X, KeyCode::X},
		    {GLFW_KEY_Y, KeyCode::Y},
		    {GLFW_KEY_Z, KeyCode::Z},
		    {GLFW_KEY_LEFT_BRACKET, KeyCode::LeftBracket},
		    {GLFW_KEY_BACKSLASH, KeyCode::Backslash},
		    {GLFW_KEY_RIGHT_BRACKET, KeyCode::RightBracket},
		    {GLFW_KEY_GRAVE_ACCENT, KeyCode::GraveAccent},
		    {GLFW_KEY_WORLD_1, KeyCode::World1},
		    {GLFW_KEY_WORLD_2, KeyCode::World2},

		    {GLFW_KEY_ESCAPE, KeyCode::Escape},
		    {GLFW_KEY_ENTER, KeyCode::Enter},
		    {GLFW_KEY_TAB, KeyCode::Tab},
		    {GLFW_KEY_BACKSPACE, KeyCode::Backspace},
		    {GLFW_KEY_INSERT, KeyCode::Insert},
		    {GLFW_KEY_DELETE, KeyCode::Delete},
		    {GLFW_KEY_RIGHT, KeyCode::Right},
		    {GLFW_KEY_LEFT, KeyCode::Left},
		    {GLFW_KEY_DOWN, KeyCode::Down},
		    {GLFW_KEY_UP, KeyCode::Up},
		    {GLFW_KEY_PAGE_UP, KeyCode::PageUp},
		    {GLFW_KEY_PAGE_DOWN, KeyCode::PageDown},
		    {GLFW_KEY_HOME, KeyCode::Home},
		    {GLFW_KEY_END, KeyCode::End},
		    {GLFW_KEY_CAPS_LOCK, KeyCode::CapsLock},
		    {GLFW_KEY_SCROLL_LOCK, KeyCode::ScrollLock},
		    {GLFW_KEY_NUM_LOCK, KeyCode::NumLock},
		    {GLFW_KEY_PRINT_SCREEN, KeyCode::PrintScreen},
		    {GLFW_KEY_PAUSE, KeyCode::Pause},

		    {GLFW_KEY_F1, KeyCode::F1},
		    {GLFW_KEY_F2, KeyCode::F2},
		    {GLFW_KEY_F3, KeyCode::F3},
		    {GLFW_KEY_F4, KeyCode::F4},
		    {GLFW_KEY_F5, KeyCode::F5},
		    {GLFW_KEY_F6, KeyCode::F6},
		    {GLFW_KEY_F7, KeyCode::F7},
		    {GLFW_KEY_F8, KeyCode::F8},
		    {GLFW_KEY_F9, KeyCode::F9},
		    {GLFW_KEY_F10, KeyCode::F10},
		    {GLFW_KEY_F11, KeyCode::F11},
		    {GLFW_KEY_F12, KeyCode::F12},
		    {GLFW_KEY_F13, KeyCode::F13},
		    {GLFW_KEY_F14, KeyCode::F14},
		    {GLFW_KEY_F15, KeyCode::F15},
		    {GLFW_KEY_F16, KeyCode::F16},
		    {GLFW_KEY_F17, KeyCode::F17},
		    {GLFW_KEY_F18, KeyCode::F18},
		    {GLFW_KEY_F19, KeyCode::F19},
		    {GLFW_KEY_F20, KeyCode::F20},
		    {GLFW_KEY_F21, KeyCode::F21},
		    {GLFW_KEY_F22, KeyCode::F22},
		    {GLFW_KEY_F23, KeyCode::F23},
		    {GLFW_KEY_F24, KeyCode::F24},
		    {GLFW_KEY_F25, KeyCode::F25},

		    {GLFW_KEY_KP_0, KeyCode::KP0},
		    {GLFW_KEY_KP_1, KeyCode::KP1},
		    {GLFW_KEY_KP_2, KeyCode::KP2},
		    {GLFW_KEY_KP_3, KeyCode::KP3},
		    {GLFW_KEY_KP_4, KeyCode::KP4},
		    {GLFW_KEY_KP_5, KeyCode::KP5},
		    {GLFW_KEY_KP_6, KeyCode::KP6},
		    {GLFW_KEY_KP_7, KeyCode::KP7},
		    {GLFW_KEY_KP_8, KeyCode::KP8},
		    {GLFW_KEY_KP_9, KeyCode::KP9},
		    {GLFW_KEY_KP_DECIMAL, KeyCode::KPDecimal},
		    {GLFW_KEY_KP_DIVIDE, KeyCode::KPDivide},
		    {GLFW_KEY_KP_MULTIPLY, KeyCode::KPMultiply},
		    {GLFW_KEY_KP_SUBTRACT, KeyCode::KPSubtract},
		    {GLFW_KEY_KP_ADD, KeyCode::KPAdd},
		    {GLFW_KEY_KP_ENTER, KeyCode::KPEnter},
		    {GLFW_KEY_KP_EQUAL, KeyCode::KPEqual},

		    {GLFW_KEY_LEFT_SHIFT, KeyCode::LeftShift},
		    {GLFW_KEY_LEFT_CONTROL, KeyCode::LeftControl},
		    {GLFW_KEY_LEFT_ALT, KeyCode::LeftAlt},
		    {GLFW_KEY_LEFT_SUPER, KeyCode::LeftSuper},
		    {GLFW_KEY_RIGHT_SHIFT, KeyCode::RightShift},
		    {GLFW_KEY_RIGHT_CONTROL, KeyCode::RightControl},
		    {GLFW_KEY_RIGHT_ALT, KeyCode::RightAlt},
		    {GLFW_KEY_RIGHT_SUPER, KeyCode::RightSuper},
		    {GLFW_KEY_MENU, KeyCode::Menu}};

		auto it = keyMap.find(glfwKeyCode);
		return (it != keyMap.end()) ? it->second : KeyCode::NONE;
	}

	 ImGuiKey HoshinoKeyToImGuiKey(KeyCode keycode)
	{
		static const ::std::unordered_map<KeyCode, ImGuiKey> keyMap = {
		    {KeyCode::NONE, ImGuiKey_None},
		    {KeyCode::Space, ImGuiKey_Space},
		    {KeyCode::Apostrophe, ImGuiKey_Apostrophe},
		    {KeyCode::Comma, ImGuiKey_Comma},
		    {KeyCode::Minus, ImGuiKey_Minus},
		    {KeyCode::Period, ImGuiKey_Period},
		    {KeyCode::Slash, ImGuiKey_Slash},
		    {KeyCode::Key0, ImGuiKey_0},
		    {KeyCode::Key1, ImGuiKey_1},
		    {KeyCode::Key2, ImGuiKey_2},
		    {KeyCode::Key3, ImGuiKey_3},
		    {KeyCode::Key4, ImGuiKey_4},
		    {KeyCode::Key5, ImGuiKey_5},
		    {KeyCode::Key6, ImGuiKey_6},
		    {KeyCode::Key7, ImGuiKey_7},
		    {KeyCode::Key8, ImGuiKey_8},
		    {KeyCode::Key9, ImGuiKey_9},
		    {KeyCode::Semicolon, ImGuiKey_Semicolon},
		    {KeyCode::Equal, ImGuiKey_Equal},
		    {KeyCode::A, ImGuiKey_A},
		    {KeyCode::B, ImGuiKey_B},
		    {KeyCode::C, ImGuiKey_C},
		    {KeyCode::D, ImGuiKey_D},
		    {KeyCode::E, ImGuiKey_E},
		    {KeyCode::F, ImGuiKey_F},
		    {KeyCode::G, ImGuiKey_G},
		    {KeyCode::H, ImGuiKey_H},
		    {KeyCode::I, ImGuiKey_I},
		    {KeyCode::J, ImGuiKey_J},
		    {KeyCode::K, ImGuiKey_K},
		    {KeyCode::L, ImGuiKey_L},
		    {KeyCode::M, ImGuiKey_M},
		    {KeyCode::N, ImGuiKey_N},
		    {KeyCode::O, ImGuiKey_O},
		    {KeyCode::P, ImGuiKey_P},
		    {KeyCode::Q, ImGuiKey_Q},
		    {KeyCode::R, ImGuiKey_R},
		    {KeyCode::S, ImGuiKey_S},
		    {KeyCode::T, ImGuiKey_T},
		    {KeyCode::U, ImGuiKey_U},
		    {KeyCode::V, ImGuiKey_V},
		    {KeyCode::W, ImGuiKey_W},
		    {KeyCode::X, ImGuiKey_X},
		    {KeyCode::Y, ImGuiKey_Y},
		    {KeyCode::Z, ImGuiKey_Z},
		    {KeyCode::LeftBracket, ImGuiKey_LeftBracket},
		    {KeyCode::Backslash, ImGuiKey_Backslash},
		    {KeyCode::RightBracket, ImGuiKey_RightBracket},
		    {KeyCode::GraveAccent, ImGuiKey_GraveAccent},
		    {KeyCode::Escape, ImGuiKey_Escape},
		    {KeyCode::Enter, ImGuiKey_Enter},
		    {KeyCode::Tab, ImGuiKey_Tab},
		    {KeyCode::Backspace, ImGuiKey_Backspace},
		    {KeyCode::Insert, ImGuiKey_Insert},
		    {KeyCode::Delete, ImGuiKey_Delete},
		    {KeyCode::Right, ImGuiKey_RightArrow},
		    {KeyCode::Left, ImGuiKey_LeftArrow},
		    {KeyCode::Down, ImGuiKey_DownArrow},
		    {KeyCode::Up, ImGuiKey_UpArrow},
		    {KeyCode::PageUp, ImGuiKey_PageUp},
		    {KeyCode::PageDown, ImGuiKey_PageDown},
		    {KeyCode::Home, ImGuiKey_Home},
		    {KeyCode::End, ImGuiKey_End},
		    {KeyCode::CapsLock, ImGuiKey_CapsLock},
		    {KeyCode::ScrollLock, ImGuiKey_ScrollLock},
		    {KeyCode::NumLock, ImGuiKey_NumLock},
		    {KeyCode::PrintScreen, ImGuiKey_PrintScreen},
		    {KeyCode::Pause, ImGuiKey_Pause},
		    {KeyCode::F1, ImGuiKey_F1},
		    {KeyCode::F2, ImGuiKey_F2},
		    {KeyCode::F3, ImGuiKey_F3},
		    {KeyCode::F4, ImGuiKey_F4},
		    {KeyCode::F5, ImGuiKey_F5},
		    {KeyCode::F6, ImGuiKey_F6},
		    {KeyCode::F7, ImGuiKey_F7},
		    {KeyCode::F8, ImGuiKey_F8},
		    {KeyCode::F9, ImGuiKey_F9},
		    {KeyCode::F10, ImGuiKey_F10},
		    {KeyCode::F11, ImGuiKey_F11},
		    {KeyCode::F12, ImGuiKey_F12},
		    {KeyCode::KP0, ImGuiKey_Keypad0},
		    {KeyCode::KP1, ImGuiKey_Keypad1},
		    {KeyCode::KP2, ImGuiKey_Keypad2},
		    {KeyCode::KP3, ImGuiKey_Keypad3},
		    {KeyCode::KP4, ImGuiKey_Keypad4},
		    {KeyCode::KP5, ImGuiKey_Keypad5},
		    {KeyCode::KP6, ImGuiKey_Keypad6},
		    {KeyCode::KP7, ImGuiKey_Keypad7},
		    {KeyCode::KP8, ImGuiKey_Keypad8},
		    {KeyCode::KP9, ImGuiKey_Keypad9},
		    {KeyCode::KPDecimal, ImGuiKey_KeypadDecimal},
		    {KeyCode::KPDivide, ImGuiKey_KeypadDivide},
		    {KeyCode::KPMultiply, ImGuiKey_KeypadMultiply},
		    {KeyCode::KPSubtract, ImGuiKey_KeypadSubtract},
		    {KeyCode::KPAdd, ImGuiKey_KeypadAdd},
		    {KeyCode::KPEnter, ImGuiKey_KeypadEnter},
		    {KeyCode::KPEqual, ImGuiKey_KeypadEqual},
		    {KeyCode::LeftShift, ImGuiKey_LeftShift},
		    {KeyCode::LeftControl, ImGuiKey_LeftCtrl},
		    {KeyCode::LeftAlt, ImGuiKey_LeftAlt},
		    {KeyCode::LeftSuper, ImGuiKey_LeftSuper},
		    {KeyCode::RightShift, ImGuiKey_RightShift},
		    {KeyCode::RightControl, ImGuiKey_RightCtrl},
		    {KeyCode::RightAlt, ImGuiKey_RightAlt},
		    {KeyCode::RightSuper, ImGuiKey_RightSuper},
		    {KeyCode::Menu, ImGuiKey_Menu}};

		auto it = keyMap.find(keycode);
		return (it != keyMap.end()) ? it->second : ImGuiKey_None;
	}

} // namespace Hoshino