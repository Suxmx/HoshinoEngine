<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BackendCodeEditorMiscSettings">
    <option name="/Default/Environment/Hierarchy/GeneratedFilesCacheKey/Timestamp/@EntryValue" value="6" type="long" />
    <option name="/Default/Housekeeping/FeatureSuggestion/FeatureSuggestionManager/DisabledSuggesters/=SwitchToGoToActionSuggester/@EntryIndexedValue" value="true" type="bool" />
    <option name="/Default/Housekeeping/GlobalSettingsUpgraded/IsUpgraded/@EntryValue" value="true" type="bool" />
    <option name="/Default/RiderDebugger/RiderRestoreDecompile/RestoreDecompileSetting/@EntryValue" value="false" type="bool" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeProjectFlavorService">
    <option name="flavorId" value="CMakePlainProjectFlavor" />
  </component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="Hoshino" targetName="ExperimentalBuild" />
      <config projectName="Hoshino" targetName="NightlyMemCheck" />
      <config projectName="Hoshino" targetName="NightlyCoverage" />
      <config projectName="Hoshino" targetName="ExperimentalConfigure" />
      <config projectName="Hoshino" targetName="ContinuousCoverage" />
      <config projectName="Hoshino" targetName="DirectX-Guids" />
      <config projectName="Hoshino" targetName="NightlySubmit" />
      <config projectName="Hoshino" targetName="glfw" />
      <config projectName="Hoshino" targetName="ContinuousMemCheck" />
      <config projectName="Hoshino" targetName="ExperimentalStart" />
      <config projectName="Hoshino" targetName="ContinuousUpdate" />
      <config projectName="Hoshino" targetName="nvrhi_d3d12" />
      <config projectName="Hoshino" targetName="nvrhi_d3d11" />
      <config projectName="Hoshino" targetName="NightlyConfigure" />
      <config projectName="Hoshino" targetName="ContinuousBuild" />
      <config projectName="Hoshino" targetName="update_mappings" />
      <config projectName="Hoshino" targetName="NightlyTest" />
      <config projectName="Hoshino" targetName="ExperimentalTest" />
      <config projectName="Hoshino" targetName="ExperimentalSubmit" />
      <config projectName="Hoshino" targetName="imgui" />
      <config projectName="Hoshino" targetName="Experimental" />
      <config projectName="Hoshino" targetName="ExperimentalCoverage" />
      <config projectName="Hoshino" targetName="glm" />
      <config projectName="Hoshino" targetName="Nightly" />
      <config projectName="Hoshino" targetName="spdlog" />
      <config projectName="Hoshino" targetName="DirectX-Headers" />
      <config projectName="Hoshino" targetName="nvrhi" />
      <config projectName="Hoshino" targetName="NightlyUpdate" />
      <config projectName="Hoshino" targetName="NightlyStart" />
      <config projectName="Hoshino" targetName="ExperimentalUpdate" />
      <config projectName="Hoshino" targetName="NightlyBuild" />
      <config projectName="Hoshino" targetName="ContinuousStart" />
      <config projectName="Hoshino" targetName="Client" />
      <config projectName="Hoshino" targetName="Continuous" />
      <config projectName="Hoshino" targetName="ContinuousTest" />
      <config projectName="Hoshino" targetName="ContinuousSubmit" />
      <config projectName="Hoshino" targetName="nvrhi_vk" />
      <config projectName="Hoshino" targetName="ContinuousConfigure" />
      <config projectName="Hoshino" targetName="ExperimentalMemCheck" />
      <config projectName="Hoshino" targetName="NightlyMemoryCheck" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug-Visual Studio" ENABLED="true" CONFIG_NAME="Debug" TOOLCHAIN_NAME="Visual Studio" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fab33c0f-b470-4745-8fa7-fb931af3bfb6" name="更改" comment="">
      <change afterPath="$PROJECT_DIR$/.gitmodules" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Model/CornellBox-Original.mtl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Model/CornellBox-Original.obj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Model/backpack.mtl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Model/backpack.obj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Frag/Blue.glsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Frag/Normal.glsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Frag/fGbuffer.glsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Frag/fLighting.glsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Hlsl/frag.hlsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Hlsl/triangle_frag.hlsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Hlsl/triangle_vert.hlsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Hlsl/vert.hlsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Vert/Vertex.vert" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Vert/vGbuffer.glsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Shader/Vert/vLighting.glsl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/Texture/test.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bin/debug/Res/slangc.exe" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/3rdParty/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/3rdParty/glfw" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/3rdParty/glm" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/3rdParty/imgui" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/3rdParty/spdlog" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Client/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Hoshino/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.clangd" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/editor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/editor.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.vscode/launch.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.vscode/settings.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Res/xmake.lua" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/include/nvrhi/common/resource.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/include/nvrhi/common/resource.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/src/vulkan/vulkan-backend.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/src/vulkan/vulkan-backend.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.cppm" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.cppm" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_core.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_core.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_enums.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_enums.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_extension_inspection.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_extension_inspection.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_funcs.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_funcs.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_handles.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_handles.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_hash.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_hash.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_raii.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_raii.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_shared.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_shared.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_static_assertions.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_static_assertions.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_structs.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_structs.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_to_string.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_to_string.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Client/xmake.lua" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Hoshino/Private/Hoshino/Layer/ImGuiLayer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Hoshino/Private/Hoshino/Layer/ImGuiLayer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Hoshino/Private/Hoshino/Log.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Hoshino/Private/Hoshino/Log.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Hoshino/Public/Hoshino/Assert.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Hoshino/Public/Hoshino/Assert.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Hoshino/Public/Hoshino/Macro.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Hoshino/Public/Hoshino/Macro.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Hoshino/xmake.lua" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/CLA.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/ThirdPartyLicenses.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/cmake/FetchAftermath.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/cmake/FindNVAPI.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/doc/ProgrammingGuide.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/doc/Tutorial.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/common/aftermath.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/common/containers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/common/misc.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/common/resource.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/common/resourcebindingmap.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/d3d11.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/d3d12.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/nvrhi.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/nvrhiHLSL.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/utils.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/validation.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/include/nvrhi/vulkan.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/NVIDIA_CLA_v1.0.1.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/AccelStructManager.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/D3D12AccelStructManager.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/D3D12Suballocator.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/Logger.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/Suballocator.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/VkAccelStructManager.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/include/rtxmu/VulkanSuballocator.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/src/D3D12AccelStructManager.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/src/D3D12Suballocator.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/src/Logger.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/src/VkAccelStructManager.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/rtxmu/src/VulkanSuballocator.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/aftermath.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/dxgi-format.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/dxgi-format.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/format-info.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/misc.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/state-tracking.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/state-tracking.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/utils.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/common/versioning.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-backend.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-buffer.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-commandlist.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-compute.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-constants.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-device.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-graphics.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-queries.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-resource-bindings.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-shader.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d11/d3d11-texture.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-backend.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-buffer.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-commandlist.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-compute.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-constants.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-descriptor-heap.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-device.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-graphics.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-meshlets.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-queries.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-raytracing.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-resource-bindings.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-shader.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-state-tracking.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-texture.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/d3d12/d3d12-upload.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/nvrhiConfig.cmake.in" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/validation/validation-backend.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/validation/validation-commandlist.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/validation/validation-device.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-allocator.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-backend.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-buffer.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-commandlist.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-compute.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-constants.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-device.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-graphics.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-meshlets.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-queries.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-queue.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-raytracing.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-resource-bindings.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-shader.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-staging-texture.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-state-tracking.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-texture.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/src/vulkan/vulkan-upload.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.github/dependabot.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.github/workflows/codeql.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.github/workflows/main.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.github/workflows/msvc.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.github/workflows/uwp.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.github/workflows/wsl.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/Android.bp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/CMakePresets.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/CODE_OF_CONDUCT.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/SECURITY.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/cmake/DirectX-Headers.pc.in" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/cmake/JoinPaths.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/cmake/directx-headers-config.cmake.in" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/googletest/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/googletest/MockDevice.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/googletest/feature_support_test.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/googletest/meson.build" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/D3D12TokenizedProgramFormat.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/DirectML.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12compatibility.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12compatibility.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12sdklayers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12sdklayers.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12shader.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12video.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3d12video.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dcommon.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dcommon.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_barriers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_check_feature_support.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_core.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_default.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_pipeline_state_stream.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_property_format_table.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_render_pass.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_resource_helpers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_root_signature.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/d3dx12_state_object.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/dxcore.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/dxcore_interface.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/dxgicommon.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/dxgicommon.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/dxgiformat.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/directx/dxgiformat.idl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/dxguids/dxguids.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/basetsd.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/oaidl.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/ocidl.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/rpc.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/rpcndr.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/unknwn.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/unknwnbase.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/winapifamily.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/wrl/client.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/stubs/wrl/implements.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/winadapter.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/include/wsl/wrladapter.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/meson.build" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/meson_options.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/src/d3dx12_property_format_table.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/src/dxguids.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/test/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/test/feature_check_test.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/test/meson.build" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/DirectX-Headers/test/test.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.gitattributes" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.github/ISSUE_TEMPLATE/bug_report.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.github/dependabot.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.github/pull_request_template.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.github/workflows/ci.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/.reuse/dep5" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/BUILD.gn" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/BUILD.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/CODE_OF_CONDUCT.adoc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/CONTRIBUTING.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/LICENSE.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/LICENSES/Apache-2.0.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/LICENSES/MIT.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/Makefile.release" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/SECURITY.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_av1std.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_av1std_decode.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_av1std_encode.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_h264std.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_h264std_decode.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_h264std_encode.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_h265std.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_h265std_decode.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codec_h265std_encode.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vk_video/vulkan_video_codecs_common.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vk_enum_string_helper.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vk_icd.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vk_layer.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vk_platform.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.cppm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_android.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_beta.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_core.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_directfb.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_enums.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_extension_inspection.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_format_traits.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_fuchsia.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_funcs.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_ggp.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_handles.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_hash.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_hpp_macros.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_ios.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_macos.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_metal.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_raii.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_screen.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_shared.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_static_assertions.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_structs.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_to_string.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_vi.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_video.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_wayland.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_win32.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_xcb.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_xlib.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_xlib_xrandr.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/apiconventions.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/cgenerator.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/generator.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/parse_dependency.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/profiles/VP_KHR_roadmap.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/reg.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/spec_tools/conventions.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/spec_tools/util.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/stripAPI.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/validusage.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/video.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/vk.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/registry/vkconventions.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/tests/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/tests/integration/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/tests/vk_icd.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/thirdparty/Vulkan-Headers/tests/vk_layer.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/tools/nvrhi.natvis" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/tools/shaderCompiler/CMakeLists.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/tools/shaderCompiler/options.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/tools/shaderCompiler/options.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/tools/shaderCompiler/shaderCompiler.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/nvrhi/xmake.lua" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/xmake.lua" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug-Visual Studio" />
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/src/3rdParty/nvrhi" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/3rdParty/nvrhi/thirdparty/Vulkan-Headers/include/vulkan/vulkan_funcs.hpp" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="2.3" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2wgFPYyrzEyDRTo9PmLiFyQD1Sr" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "CMake 应用程序.Client.executor": "Debug",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.RadMigrateCodeStyle": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "RunOnceActivity.west.config.association.type.startup.service": "true",
    "cf.advertisement.text.has.clang-format": "true",
    "cf.advertisement.text.overridden": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "E:/HoshinoEngine_C/bin/debug",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "CMakeSettings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\HoshinoEngine_C\bin\debug" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\HoshinoEngine\src\3rdParty" />
      <recent name="E:\HoshinoEngine\src\Client" />
    </key>
  </component>
  <component name="RunManager" selected="CMake 应用程序.Client">
    <configuration default="true" type="XMakeRunConfiguration" factoryName="Start and Debug" show_console_on_std_err="false" show_console_on_std_out="false">
      <target name="runTarget" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <activatedToolkit name="runToolkit" />
      <target name="runTarget" value="default" />
      <platform name="runPlatform" value="default" />
      <architecture name="runArchitecture" value="default" />
      <toolchain name="runToolchain" value="default" />
      <mode name="runMode" value="release" />
      <arguments name="runArguments" value="" />
      <workingDirectory name="runWorkingDir" value="" />
      <buildDirectory name="buildDirectory" value="" />
      <androidNDKDirectory name="androidNDKDirectory" value="" />
      <enableVerbose name="enableVerbose" value="false" />
      <additionalConfiguration name="additionalConfiguration" value="" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Client" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="Client" CONFIG_NAME="Debug-Visual Studio" RUN_TARGET_PROJECT_NAME="Hoshino" RUN_TARGET_NAME="Client">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Continuous" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="Continuous" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousBuild" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousBuild" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousConfigure" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousConfigure" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousCoverage" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousMemCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousMemCheck" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousStart" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousStart" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousSubmit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousSubmit" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousTest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousTest" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousUpdate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ContinuousUpdate" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DirectX-Guids" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="DirectX-Guids" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DirectX-Headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="DirectX-Headers" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Experimental" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="Experimental" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalBuild" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalBuild" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalConfigure" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalConfigure" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalCoverage" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalMemCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalMemCheck" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalStart" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalStart" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalSubmit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalSubmit" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalTest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalTest" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalUpdate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="ExperimentalUpdate" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Hoshino" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Nightly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="Nightly" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyBuild" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyBuild" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyConfigure" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyConfigure" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyCoverage" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyMemCheck" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemoryCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyMemoryCheck" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyStart" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyStart" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlySubmit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlySubmit" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyTest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyTest" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyUpdate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="NightlyUpdate" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="glfw" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="glm" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="imgui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="imgui" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="nvrhi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="nvrhi" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="nvrhi_d3d11" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="nvrhi_d3d11" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="nvrhi_d3d12" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="nvrhi_d3d12" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="nvrhi_vk" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="nvrhi_vk" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="spdlog" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="spdlog" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Hoshino" TARGET_NAME="update_mappings" CONFIG_NAME="Debug-Visual Studio">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake 应用程序.glfw" />
      <item itemvalue="CMake 应用程序.update_mappings" />
      <item itemvalue="CMake 应用程序.glm" />
      <item itemvalue="CMake 应用程序.imgui" />
      <item itemvalue="CMake 应用程序.nvrhi" />
      <item itemvalue="CMake 应用程序.nvrhi_d3d11" />
      <item itemvalue="CMake 应用程序.nvrhi_d3d12" />
      <item itemvalue="CMake 应用程序.nvrhi_vk" />
      <item itemvalue="CMake 应用程序.Continuous" />
      <item itemvalue="CMake 应用程序.ContinuousBuild" />
      <item itemvalue="CMake 应用程序.ContinuousConfigure" />
      <item itemvalue="CMake 应用程序.ContinuousCoverage" />
      <item itemvalue="CMake 应用程序.ContinuousMemCheck" />
      <item itemvalue="CMake 应用程序.ContinuousStart" />
      <item itemvalue="CMake 应用程序.ContinuousSubmit" />
      <item itemvalue="CMake 应用程序.ContinuousTest" />
      <item itemvalue="CMake 应用程序.ContinuousUpdate" />
      <item itemvalue="CMake 应用程序.DirectX-Guids" />
      <item itemvalue="CMake 应用程序.DirectX-Headers" />
      <item itemvalue="CMake 应用程序.Experimental" />
      <item itemvalue="CMake 应用程序.ExperimentalBuild" />
      <item itemvalue="CMake 应用程序.ExperimentalConfigure" />
      <item itemvalue="CMake 应用程序.ExperimentalCoverage" />
      <item itemvalue="CMake 应用程序.ExperimentalMemCheck" />
      <item itemvalue="CMake 应用程序.ExperimentalStart" />
      <item itemvalue="CMake 应用程序.ExperimentalSubmit" />
      <item itemvalue="CMake 应用程序.ExperimentalTest" />
      <item itemvalue="CMake 应用程序.ExperimentalUpdate" />
      <item itemvalue="CMake 应用程序.Nightly" />
      <item itemvalue="CMake 应用程序.NightlyBuild" />
      <item itemvalue="CMake 应用程序.NightlyConfigure" />
      <item itemvalue="CMake 应用程序.NightlyCoverage" />
      <item itemvalue="CMake 应用程序.NightlyMemCheck" />
      <item itemvalue="CMake 应用程序.NightlyMemoryCheck" />
      <item itemvalue="CMake 应用程序.NightlyStart" />
      <item itemvalue="CMake 应用程序.NightlySubmit" />
      <item itemvalue="CMake 应用程序.NightlyTest" />
      <item itemvalue="CMake 应用程序.NightlyUpdate" />
      <item itemvalue="CMake 应用程序.spdlog" />
      <item itemvalue="CMake 应用程序.Client" />
      <item itemvalue="CMake 应用程序.Hoshino" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="fab33c0f-b470-4745-8fa7-fb931af3bfb6" name="更改" comment="" />
      <created>1746455288791</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746455288791</updated>
      <workItem from="1746455290369" duration="370000" />
      <workItem from="1746455665422" duration="498000" />
      <workItem from="1749927937656" duration="5972000" />
      <workItem from="1749970508578" duration="65000" />
      <workItem from="1749970590329" duration="51000" />
      <workItem from="1749970666078" duration="123000" />
      <workItem from="1749970845049" duration="103000" />
      <workItem from="1749970949853" duration="46000" />
      <workItem from="1749971023667" duration="28000" />
      <workItem from="1749971061104" duration="4678000" />
      <workItem from="1749975856074" duration="548000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.lua" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/src/3rdParty/imgui" />
    </ignored-roots>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <default-breakpoints>
        <breakpoint enabled="true" type="CidrExceptionBreakpoint">
          <properties caught="ANY_EXCEPTION">
            <option name="whenCaught" value="ANY_EXCEPTION" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>